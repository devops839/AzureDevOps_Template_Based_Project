parameters: 
  - name: buildConfiguration
    type: string
    default: 'Release'
  - name: azureSubscription
    type: string
  - name: azureWebAppName
    type: string
  - name: resourceGroupName
    type: string

stages:
  - stage: Build
    displayName: Build the Application
    jobs:
      - job: BuildJob
        displayName: Build the .NET Application
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core SDK'
            inputs:
              packageType: sdk
              version: '8.0.404'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - task: DotNetCoreCLI@2
            displayName: 'Restore NuGet Packages'
            inputs:
              command: restore
              projects: '**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'Build Solution'
            inputs:
              command: build
              projects: '**/*.csproj'
              arguments: '--configuration ${{ parameters.buildConfiguration }}'

          - task: DotNetCoreCLI@2
            displayName: 'Publish Application'
            inputs:
              command: publish
              publishWebProjects: true
              arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'WebAppArtifact'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: Deploy to Azure Web App
    dependsOn: Build
    jobs:
      - job: DeployWebApp
        displayName: Deploy .NET Application to Azure Web App
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: WebAppArtifact
              targetPath: $(System.DefaultWorkingDirectory)

          # Add a script to confirm downloaded files
          - script: |
              echo "Contents of the downloaded artifact:"
              ls -R $(System.DefaultWorkingDirectory)
            displayName: 'Debug Artifact Contents'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: ${{ parameters.azureSubscription }}
              appType: webApp
              appName: ${{ parameters.azureWebAppName }}
              resourceGroupName: ${{ parameters.resourceGroupName }}
              package: $(System.DefaultWorkingDirectory)/s.zip
